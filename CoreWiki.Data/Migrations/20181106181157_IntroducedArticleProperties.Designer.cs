// <auto-generated />
using System;
using CoreWiki.Data.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreWiki.Data.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181106181157_IntroducedArticleProperties")]
    partial class IntroducedArticleProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("CoreWiki.Data.EntityFramework.Models.ArticleDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleProperties");

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("AuthorName");

                    b.Property<string>("Content");

                    b.Property<DateTime>("PublishedDateTime")
                        .HasColumnName("Published");

                    b.Property<string>("Slug");

                    b.Property<string>("Topic");

                    b.Property<int>("Version");

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Articles");

                    b.HasData(
                        new { Id = 1, ArticleProperties = 0, AuthorId = new Guid("00000000-0000-0000-0000-000000000000"), AuthorName = "Unknown", Content = "This is the default home page. Please change me!", PublishedDateTime = new DateTime(2018, 6, 19, 14, 31, 2, 265, DateTimeKind.Utc), Slug = "home-page", Topic = "Home Page", Version = 1, ViewCount = 0 }
                    );
                });

            modelBuilder.Entity("CoreWiki.Data.EntityFramework.Models.ArticleHistoryDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleId");

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("AuthorName");

                    b.Property<string>("Content");

                    b.Property<DateTime>("PublishedDateTime")
                        .HasColumnName("Published");

                    b.Property<string>("Slug");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Version");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleHistories");

                    b.HasData(
                        new { Id = 1, ArticleId = 1, AuthorId = new Guid("00000000-0000-0000-0000-000000000000"), AuthorName = "Unknown", Content = "This is the default home page. Please change me!", PublishedDateTime = new DateTime(2018, 6, 19, 14, 31, 2, 265, DateTimeKind.Utc), Slug = "home-page", Topic = "Home Page", Version = 1 }
                    );
                });

            modelBuilder.Entity("CoreWiki.Data.EntityFramework.Models.CommentDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArticleId");

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("IdArticle");

                    b.Property<DateTime>("SubmittedDateTime")
                        .HasColumnName("Submitted");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CoreWiki.Data.EntityFramework.Models.SlugHistoryDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDateTime")
                        .HasColumnName("Added");

                    b.Property<int?>("ArticleId");

                    b.Property<string>("OldSlug");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("OldSlug", "AddedDateTime");

                    b.ToTable("SlugHistories");
                });

            modelBuilder.Entity("CoreWiki.Data.EntityFramework.Models.ArticleHistoryDAO", b =>
                {
                    b.HasOne("CoreWiki.Data.EntityFramework.Models.ArticleDAO", "Article")
                        .WithMany("History")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoreWiki.Data.EntityFramework.Models.CommentDAO", b =>
                {
                    b.HasOne("CoreWiki.Data.EntityFramework.Models.ArticleDAO", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoreWiki.Data.EntityFramework.Models.SlugHistoryDAO", b =>
                {
                    b.HasOne("CoreWiki.Data.EntityFramework.Models.ArticleDAO", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId");
                });
#pragma warning restore 612, 618
        }
    }
}
